Services and Autonomic Computing: A Practical Approach for Designing Manageability.IBM defines autonomic computing as ��an approach to build computing systems that are self-managed and operate with a minimum of human interference.�� To build an autonomic system, some characteristics such as selfknowledge, self-optimization, self-healing, self-defense, among others, have to be built into it. Service Oriented Architecture (SOA) is an architectural paradigm that promotes development of software systems as sets of collaborative and loosely coupled services. It defines principals for achieving service interoperability, agility, reusability, integration and such others across heterogeneous distributed software systems. It is widely accepted that web services are entities that provide many out-of-the-box capabilities for building Service Oriented software systems. Since the SOA approach has been proposed recently, various standards for addressing areas such as service orchestration, security, contract definition languages, policy exchange mechanisms and such others, are presently under development. One such key area that is gaining a lot of attention recently is web service manageability. This paper discusses an approach for modeling the manageability of a web service at design time and implementing that model to impart autonomic capabilities to it at run time. Of the various characteristics of autonomic systems self-knowledge, self-recovery and selfoptimization are discussed herein.